diff --git a/app/controllers/api/v1/users_controller.rb b/app/controllers/api/v1/users_controller.rb
index 5bdb808..32817c6 100644
--- a/app/controllers/api/v1/users_controller.rb
+++ b/app/controllers/api/v1/users_controller.rb
@@ -12,31 +12,47 @@ module Api::V1
     # end
 
     def get_static_data
-      user = User.find(params[:user_id])
-      @role = Role.find_by(name: user.role)
-      render json: RoleSerializer.serialize_with_tracks(@role)
+      if params[:user_id]
+        user = User.find(params[:user_id])
+        @role = Role.find_by(name: user.role)
+        render json: @role
+      else
+        @roles = Role.all
+        render json: @roles
+      end
     end
 
     def create_assessment
-      user = User.find(params[:user_id])
-      role = Role.find_by(name: user.role)
-      assessment_result = user.assessment_results.create!(
-                              total_points: params["Total points"],
-                              current_level: params["Current level"],
-                              points_to_next_level:
-                               params["Points to next level"])
-      assessment_data = params["Assessment Data"]
-      for a in assessment_data
-        track_category = TrackCategory.find_by(name: a["Track category"])
-        track = track_category.tracks.find_by(name: a["Track"])
-        level = track.levels.find_by(seq_no: a["Level"])
-        assessment_result.level_assessments.create!(user_id: user.id,
-                                                   role_id: role.id,
-                                                   track_category_id: track_category,
-                                                   track_id: track.id,
-                                                   level_id: level.id,
-                                                   )
+      cycle = Cycle.find_by(is_open: true)
+      if cycle && (Date.today <= cycle.emp_duration_end)
+        byebug
+        assessment_result = AssessmentResult.create(
+                          total_points:         params[:total_points],
+                          current_level:        params[:current_level],
+                          points_to_next_level: params[:points_to_next_level],
+                          cycle_id:             cycle.id,
+                          user_id:              params[:user_id])
+        track_categories = params[:track_categories]
+        for track_category in track_categories
+          tracks = track_categories[:tracks]
+          for track in tracks
+            assessment_result.level_assessments.create(
+                        user_id:           params[:user_id],
+                        role_id:           params[:role_id],
+                        track_category_id: track_category[:track_category_id],
+                        track_id:          track[:track_id],
+                        level_id:          track[:level_id])
+          end
+        end
+        render json: {message: 'Assessment saved successfully'}, status: 201
+      else
+        render json: {errors: 'Sorry, u can only create assessment in allowed time'},
+                      status: 412
       end
     end
+    
+    def update_assessment
+      cycle = Cycle.find_by(is_open: true)
+    end
   end
 end
\ No newline at end of file
diff --git a/app/controllers/assessment_results_controller.rb b/app/controllers/assessment_results_controller.rb
index f4635af..883054d 100644
--- a/app/controllers/assessment_results_controller.rb
+++ b/app/controllers/assessment_results_controller.rb
@@ -1,4 +1,5 @@
 class AssessmentResultsController < ApplicationController
   def index
+    @assessment_results = AssessmentResult.all
   end
 end
diff --git a/app/serializers/level_serializer.rb b/app/serializers/level_serializer.rb
deleted file mode 100644
index ed45fd4..0000000
--- a/app/serializers/level_serializer.rb
+++ /dev/null
@@ -1,16 +0,0 @@
-class LevelSerializer < ActiveModel::Serializer
-
-  attributes :description, :example_behaviour, :example_task
-
-  def self.serialize_levels(levels)
-    levels.map{|level| self.serialize_level(level) }    
-  end
-
-  def self.serialize_level(level)
-  {
-    summary: level.description,
-    signals: level.example_behaviour,
-    examples: level.example_task
-  }
-  end
-end
\ No newline at end of file
diff --git a/app/serializers/role_serializer.rb b/app/serializers/role_serializer.rb
index decf0ca..80c59b7 100644
--- a/app/serializers/role_serializer.rb
+++ b/app/serializers/role_serializer.rb
@@ -1,19 +1,48 @@
 class RoleSerializer < ActiveModel::Serializer
 
+  attributes :id, :name
+
   has_many :track_categories
 
-  def self.serialize_with_tracks(role)
-  {
-    tracks: self.serialize_track_categories(role.track_categories)
-  }
-  end
+  # def self.serialize_with_tracks(role)
+  # {
+  #   tracks: self.serialize_track_categories(role.track_categories)
+  # }
+  # end
 
-  def self.serialize_track_categories(track_categories)
-    track_categories.map{ |track_category|
-     self.serialize_tracks(track_category) }
-  end
+  # def self.serialize_track_categories(track_categories)
+  #   track_categories.map{ |track_category|
+  #    self.serialize_tracks(track_category)
+  #   }
+  # end
+
+  # def self.serialize_tracks(track_category)
+  #   TrackSerializer.serialize_tracks(track_category.tracks)
+  # end
+
+  # def self.serialize_with_roles(roles)
+  # {
+  #   Roles: ActiveModelSerializers::SerializableResource.new(roles).as_json
+  # }
+  # end
+
+  class TrackCategorySerializer < ActiveModel::Serializer
+
+    attributes :id, :name, :description
+
+    has_many :tracks
+
+    class TrackSerializer < ActiveModel::Serializer
+
+      attributes :id, :name, :description
+
+      has_many :levels
+
+      class LevelSerializer < ActiveModel::Serializer
+
+        attributes :id, :seq_no, :description, :example_behaviour, :example_task
 
-  def self.serialize_tracks(track_category)
-    TrackSerializer.serialize_tracks(track_category.tracks)
+      end
+    end
   end
 end
\ No newline at end of file
diff --git a/app/serializers/track_category_serializer.rb b/app/serializers/track_category_serializer.rb
deleted file mode 100644
index 72bbc97..0000000
--- a/app/serializers/track_category_serializer.rb
+++ /dev/null
@@ -1,5 +0,0 @@
-class TrackCategorySerializer < ActiveModel::Serializer
-	attributes :name
-	has_many :tracks
-	belongs_to :role
-end
\ No newline at end of file
diff --git a/app/serializers/track_serializer.rb b/app/serializers/track_serializer.rb
deleted file mode 100644
index d41fe8d..0000000
--- a/app/serializers/track_serializer.rb
+++ /dev/null
@@ -1,22 +0,0 @@
-class TrackSerializer < ActiveModel::Serializer
-
-  attributes :name, :description
-  
-  has_many :levels
-
-  def self.serialize_tracks(tracks)
-    tracks.map{|track| self.serialize_track(track)}
-  end
-
-  def self.serialize_track(track)
-  {
-    "#{track.name.upcase}": 
-    {
-    displayName: track.name,  
-    category: track.track_category.name,
-    description: track.description,
-    milestones: ActiveModel::SerializableResource.new(track.levels).as_json
-    }
-  }
-  end
-end
\ No newline at end of file
